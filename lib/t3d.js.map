{"version":3,"sources":["t3d.ts"],"names":[],"mappings":"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,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,GAAG,GAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,IAAI,GAAG;gBACR,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;gBAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;gBAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;gBAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;gBAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,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","file":"t3d.js","sourcesContent":["/**\r\n * Tiny 3D library\r\n */\r\nnamespace T3D {\r\n\r\n    /**\r\n     * Radiant scale\r\n     */\r\n    export const RAD_SCALE = Math.PI / 180;\r\n    \r\n    /**\r\n     * Vector 3 math\r\n     */\r\n    export class Vec3 {\r\n\r\n        x: number = 0;\r\n        y: number = 0;\r\n        z: number = 0;\r\n\r\n        constructor(x?: number, y?: number, z?:number) {\r\n            this.set(x, y, z);\r\n        }\r\n\r\n        set(x?: number, y?: number, z?: number): Vec3 {\r\n            if (typeof x == 'number') {\r\n                this.x = x;\r\n            }\r\n            if (typeof y == 'number') {\r\n                this.y = y;\r\n            }\r\n            if (typeof z == 'number') {\r\n                this.z = z;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        add(vec: Vec3): Vec3 {\r\n            this.x += vec.x;\r\n            this.y += vec.y;\r\n            this.z += vec.z;\r\n            return this;\r\n        }\r\n\r\n        sub(vec: Vec3): Vec3 {\r\n            this.x -= vec.x;\r\n            this.y -= vec.y;\r\n            this.z -= vec.z;\r\n            return this;\r\n        }\r\n\r\n        dot(vec: Vec3): number {\r\n            return this.x * vec.x + this.y * vec.y + this.z * vec.z;\r\n        }\r\n\r\n        cross(vec: Vec3): Vec3 {\r\n            let x = this.x;\r\n            let y = this.y;\r\n            let z = this.z;\r\n            let vx = vec.x;\r\n            let vy = vec.y;\r\n            let vz = vec.z;\r\n            this.x = y * vz - z * vy;\r\n            this.y = z * vx - x * vz;\r\n            this.z = x * vy - y * vx;\r\n            return this;\r\n        };\r\n\r\n        length(): number {\r\n            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n        }\r\n\r\n        scale(scale: any): Vec3 {\r\n            this.x *= scale;\r\n            this.y *= scale;\r\n            this.z *= scale;\r\n            return this;\r\n        }\r\n\r\n        normalize() {\r\n            var length = this.length();\r\n            if (length > 0) {\r\n                this.scale(1 / length);\r\n            }\r\n            return this;\r\n        }\r\n\r\n        clone(): Vec3 {\r\n            return new Vec3(this.x, this.y, this.z);\r\n        }\r\n\r\n        invert(): Vec3 {\r\n            this.x = -this.x;\r\n            this.y = -this.y;\r\n            this.z = -this.z;\r\n            return this;\r\n        }\r\n\r\n        toArray(): Array<number> {\r\n            return [this.x, this.y, this.z];\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 3x3 matrix math\r\n     */\r\n    export class Mat3 {\r\n\r\n        data: Array<number>;\r\n\r\n        constructor(data?: Array<number>) {\r\n            this.data = data || [\r\n                0, 0, 0,\r\n\t\t\t    0, 0, 0,\r\n\t\t\t    0, 0, 0\r\n            ];\r\n        }\r\n\r\n        transpose() : Mat3 {\r\n            const a = this.data, \r\n                a01 = a[1],\r\n                a02 = a[2],\r\n                a12 = a[5];\r\n            a[1] = a[3];\r\n            a[2] = a[6];\r\n            a[3] = a01;\r\n            a[5] = a[7];\r\n            a[6] = a02;\r\n            a[7] = a12;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 4x4 matrix math\r\n     */\r\n    export class Mat4 {\r\n\r\n        public data: Array<number>;\r\n\r\n        constructor(data?: Array<number>) {\r\n            this.data = data || [\r\n                1, 0, 0, 0,\r\n                0, 1, 0, 0,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1\r\n            ];\r\n        }\r\n\r\n        clone(): Mat4 {\r\n            return new Mat4(this.data);\r\n        }\r\n\r\n        multiply(b: Array<number>): Mat4 {\r\n            const a: Array<number> = this.data,\r\n                a00: number = a[0 * 4 + 0],\r\n                a01: number = a[0 * 4 + 1],\r\n                a02: number = a[0 * 4 + 2],\r\n                a03: number = a[0 * 4 + 3],\r\n                a10: number = a[1 * 4 + 0],\r\n                a11: number = a[1 * 4 + 1],\r\n                a12: number = a[1 * 4 + 2],\r\n                a13: number = a[1 * 4 + 3],\r\n                a20: number = a[2 * 4 + 0],\r\n                a21: number = a[2 * 4 + 1],\r\n                a22: number = a[2 * 4 + 2],\r\n                a23: number = a[2 * 4 + 3],\r\n                a30: number = a[3 * 4 + 0],\r\n                a31: number = a[3 * 4 + 1],\r\n                a32: number = a[3 * 4 + 2],\r\n                a33: number = a[3 * 4 + 3],\r\n                b00: number = b[0 * 4 + 0],\r\n                b01: number = b[0 * 4 + 1],\r\n                b02: number = b[0 * 4 + 2],\r\n                b03: number = b[0 * 4 + 3],\r\n                b10: number = b[1 * 4 + 0],\r\n                b11: number = b[1 * 4 + 1],\r\n                b12: number = b[1 * 4 + 2],\r\n                b13: number = b[1 * 4 + 3],\r\n                b20: number = b[2 * 4 + 0],\r\n                b21: number = b[2 * 4 + 1],\r\n                b22: number = b[2 * 4 + 2],\r\n                b23: number = b[2 * 4 + 3],\r\n                b30: number = b[3 * 4 + 0],\r\n                b31: number = b[3 * 4 + 1],\r\n                b32: number = b[3 * 4 + 2],\r\n                b33: number = b[3 * 4 + 3];\r\n            this.data = [\r\n                a00 * b00 + a01 * b10 + a02 * b20 + a03 * b30,\r\n                a00 * b01 + a01 * b11 + a02 * b21 + a03 * b31,\r\n                a00 * b02 + a01 * b12 + a02 * b22 + a03 * b32,\r\n                a00 * b03 + a01 * b13 + a02 * b23 + a03 * b33,\r\n                a10 * b00 + a11 * b10 + a12 * b20 + a13 * b30,\r\n                a10 * b01 + a11 * b11 + a12 * b21 + a13 * b31,\r\n                a10 * b02 + a11 * b12 + a12 * b22 + a13 * b32,\r\n                a10 * b03 + a11 * b13 + a12 * b23 + a13 * b33,\r\n                a20 * b00 + a21 * b10 + a22 * b20 + a23 * b30,\r\n                a20 * b01 + a21 * b11 + a22 * b21 + a23 * b31,\r\n                a20 * b02 + a21 * b12 + a22 * b22 + a23 * b32,\r\n                a20 * b03 + a21 * b13 + a22 * b23 + a23 * b33,\r\n                a30 * b00 + a31 * b10 + a32 * b20 + a33 * b30,\r\n                a30 * b01 + a31 * b11 + a32 * b21 + a33 * b31,\r\n                a30 * b02 + a31 * b12 + a32 * b22 + a33 * b32,\r\n                a30 * b03 + a31 * b13 + a32 * b23 + a33 * b33\r\n            ];\r\n            return this;\r\n        }\r\n\r\n        scale(vec: Vec3): Mat4 {\r\n            return this.multiply([\r\n                vec.x, 0, 0, 0,\r\n                0, vec.y, 0, 0,\r\n                0, 0, vec.z, 0,\r\n                0, 0, 0, 1,\r\n            ]);\r\n        }\r\n\r\n        translate(vec: Vec3): Mat4 {\r\n            return this.multiply([\r\n                1, 0, 0, 0,\r\n                0, 1, 0, 0,\r\n                0, 0, 1, 0,\r\n                vec.x, vec.y, vec.z, 1\r\n            ]);\r\n        }\r\n\r\n        rotateX(angle: number): Mat4 {\r\n            const c = Math.cos(angle);\r\n            const s = Math.sin(angle);\r\n            return this.multiply([\r\n                1, 0, 0, 0,\r\n                0, c, s, 0,\r\n                0, -s, c, 0,\r\n                0, 0, 0, 1\r\n            ]);\r\n        }\r\n\r\n        rotateY(angle: number): Mat4 {\r\n            const c = Math.cos(angle);\r\n            const s = Math.sin(angle);\r\n            return this.multiply([\r\n                c, 0, -s, 0,\r\n                0, 1, 0, 0,\r\n                s, 0, c, 0,\r\n                0, 0, 0, 1\r\n            ]);\r\n        }\r\n\r\n        rotateZ(angle: number): Mat4 {\r\n            const c = Math.cos(angle);\r\n            const s = Math.sin(angle);\r\n            return this.multiply([\r\n                c, s, 0, 0,\r\n                -s, c, 0, 0,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1,\r\n            ]);\r\n        }\r\n\r\n        rotate(vec: Vec3): Mat4 {\r\n            return this\r\n                .rotateX(vec.x)\r\n                .rotateY(vec.y)\r\n                .rotateZ(vec.z);\r\n        }\r\n\r\n        perspective(fov: number, aspect: number, near: number, far: number): Mat4 {\r\n            const f: number = Math.tan(Math.PI * 0.5 - 0.5 * fov);\r\n            const rangeInv: number = 1.0 / (near - far);\r\n            return this.multiply([\r\n                f / aspect, 0, 0, 0,\r\n                0, f, 0, 0,\r\n                0, 0, (near + far) * rangeInv, -1,\r\n                0, 0, near * far * rangeInv * 2, 0\r\n            ]);\r\n        }\r\n\r\n        invert(): Mat3 {\r\n            const mat = this.data,\r\n                a00 = mat[0], a01 = mat[1], a02 = mat[2],\r\n                a10 = mat[4], a11 = mat[5], a12 = mat[6],\r\n                a20 = mat[8], a21 = mat[9], a22 = mat[10],\r\n                b01 = a22 * a11 - a12 * a21,\r\n                b11 = -a22 * a10 + a12 * a20,\r\n                b21 = a21 * a10 - a11 * a20,\r\n                d = a00 * b01 + a01 * b11 + a02 * b21;\r\n            if (!d) {\r\n                return null;\r\n            }\r\n            const id = 1 / d;\r\n            return new Mat3([\r\n                b01 * id,\r\n                (-a22 * a01 + a02 * a21) * id,\r\n                (a12 * a01 - a02 * a11) * id,\r\n                b11 * id,\r\n                (a22 * a00 - a02 * a20) * id,\r\n                (-a12 * a00 + a02 * a10) * id,\r\n                b21 * id,\r\n                (-a21 * a00 + a01 * a20) * id,\r\n                (a11 * a00 - a01 * a10) * id\r\n            ]);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Transform class\r\n     */\r\n    export class Transform {\r\n\r\n        scale: Vec3;\r\n        rotate: Vec3;\r\n        translate: Vec3;\r\n        parent: Transform;\r\n\r\n        constructor(data: Array<number> = []) {\r\n            this.translate = new Vec3(data[0] || 0, data[1] || 0, data[2] || 0);\r\n            this.rotate = new Vec3(data[3] || 0, data[4] || 0, data[5] || 0);\r\n            this.scale = new Vec3(data[6] || 1, data[7] || 1, data[8] || 1);\r\n        }\r\n\r\n        matrix(matrix?: Mat4) : Mat4 {\r\n            matrix = matrix || new Mat4();\r\n            matrix.scale(this.scale)\r\n                .rotate(this.rotate.clone().scale(RAD_SCALE))\r\n                .translate(this.translate);\r\n            return this.parent\r\n                ? this.parent.matrix(matrix)\r\n                : matrix;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 3D Camera settings\r\n     */\r\n    export class Camera {\r\n\r\n        fov: number;\r\n        aspect: number;\r\n        near: number;\r\n        far: number;\r\n        rotate: Vec3 = new Vec3();\r\n        position: Vec3 = new Vec3();\r\n\r\n        constructor(aspect: number = 1, fov: number = 45, near: number = .1, far: number = 100) {\r\n            this.fov = fov;\r\n            this.aspect = aspect;\r\n            this.near = near;\r\n            this.far = far;\r\n        }\r\n\r\n        transform(transform: Transform): Mat4 {\r\n            return transform.matrix()\r\n                .rotate(this.rotate.clone().invert())\r\n                .translate(this.position.clone().invert());\r\n        }\r\n\r\n        perspective(): Mat4 {\r\n            return new Mat4().perspective(this.fov, this.aspect, this.near, this.far);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Vertice class\r\n     */\r\n    class Vert extends Vec3 {\r\n\r\n        faces: Array<Face> = [];\r\n\r\n        addFace(face: Face) {\r\n            this.faces.push(face);\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Triangle face\r\n     */\r\n    class Face {\r\n\r\n        verts: Array<Vert> = [];\r\n        normal: Vec3;\r\n        normals: Array<Vec3> = [];\r\n\r\n        constructor(v1: Vert, v2: Vert, v3: Vert) {\r\n            v1.addFace(this);\r\n            v2.addFace(this);\r\n            v3.addFace(this);\r\n            this.verts.push(v1, v2, v3);\r\n            this.normal = v2.clone().sub(v1).cross(v3.clone().sub(v1)).normalize();\r\n        }\r\n\r\n        calcNormals(angleCos: number): Face {\r\n            this.verts.forEach((vert: Vert, i: number) => {\r\n                let normal: Vec3;\r\n                vert.faces.forEach(face => {\r\n                    if (this.normal.dot(face.normal) > angleCos) {\r\n                        normal = normal ? normal.add(face.normal) : face.normal.clone();\r\n                    }\r\n                });\r\n                this.normals.push(normal ? normal.normalize() : this.normal);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        pushVerts(data: Array<number>): Face {\r\n            this.verts.forEach((vec: Vert) => {\r\n                data.push(...vec.toArray());\r\n            });\r\n            return this;\r\n        }\r\n\r\n        pushNormals(data: Array<number>): Face {\r\n            this.normals.forEach((vec: Vert) => {\r\n                data.push(...vec.toArray());\r\n            });\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Generated mesh\r\n     */\r\n    export class Mesh {\r\n\r\n        verts: Array<number> = [];\r\n        normals: Array<number> = [];\r\n\r\n        constructor(divide: number, path: Array<number> = [], smooth: number = 0, angle: number=360) {\r\n            if (divide < 2) {\r\n                return;\r\n            }\r\n            if (path.length < 2) {\r\n                path = this.sphere(path.length > 0 ? path[0] + 2 : Math.ceil(divide / 2) + 1);\r\n            }\r\n            const verts: Array<Vert> = this.createVerts(divide, path, 0, angle);\r\n            const faces: Array<Face> = this.createFaces(verts, divide, path.length / 2);\r\n            const cos = Math.cos(smooth * RAD_SCALE);\r\n            faces.forEach((face: Face) => {\r\n                face.calcNormals(cos)\r\n                    .pushVerts(this.verts)\r\n                    .pushNormals(this.normals);\r\n            });\r\n        }\r\n\r\n        private sphere(divide: number) {\r\n            const path = [];\r\n            if (divide < 3) {\r\n                return;\r\n            }\r\n            let angle: number = Math.PI / (divide - 1);\r\n            for (let i = 1; i < divide - 1; i++) {\r\n                let a = angle * i;\r\n                path.push(Math.sin(a) / 2);\r\n                path.push(Math.cos(a) / 2);\r\n            }\r\n            return path;\r\n        }\r\n\r\n        private createVerts(divide: number, path: Array<number>, start: number, end: number): Array<Vert> {\r\n            start *= RAD_SCALE;\r\n            end *= RAD_SCALE;\r\n            let verts: Array<Vert> = [];\r\n            let angle: number = (end - start) / divide;\r\n            verts.push(new Vert(0, .5, 0));\r\n            verts.push(new Vert(0, -.5, 0));\r\n            for (let i = 0; i < divide; i++) {\r\n                let a = angle * i + start;\r\n                let x = Math.cos(a);\r\n                let z = Math.sin(a);\r\n                for (let j = 0; j < path.length; j += 2) {\r\n                    let vert = new Vert(x, 0, z);\r\n                    vert.scale(path[j]).y = path[j + 1];\r\n                    verts.push(vert);\r\n                }\r\n            }\r\n            return verts;\r\n        }\r\n\r\n        private createFaces(verts: Array<Vert>, divide: number, length: number): Array<Face> {\r\n            const faces: Array<Face> = [];\r\n            let index;\r\n            for (let i = 1; i < divide; ++i) {\r\n                index = i * length + 2;\r\n                faces.push(new Face(verts[0], verts[index], verts[index - length]));\r\n                faces.push(new Face(verts[1], verts[index - 1], verts[index + length - 1]));\r\n                for (let j = 0; j < length - 1; j++) {\r\n                    let add = index + j;\r\n                    faces.push(new Face(verts[add + 1], verts[add - length], verts[add]));\r\n                    faces.push(new Face(verts[add - length + 1], verts[add - length], verts[add + 1]));\r\n                }\r\n            }\r\n            faces.push(new Face(verts[0], verts[2], verts[index]));\r\n            faces.push(new Face(verts[1], verts[index + length - 1], verts[length + 1]));\r\n            for (let j = 0; j < length - 1; j++) {\r\n                let add = index + j;\r\n                faces.push(new Face(verts[j + 3], verts[add], verts[j + 2]));\r\n                faces.push(new Face(verts[add + 1], verts[add], verts[j + 3]));\r\n            }\r\n            return faces;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Simple game item\r\n     */\r\n    export class Item {\r\n\r\n        mesh: Mesh;\r\n        color: Array<number>;\r\n        transform: Transform;\r\n        childs: Array<Item> = [];\r\n\r\n        constructor(mesh?: Mesh, color?: Array<number>, transform?: Array<number>) {\r\n            this.mesh = mesh;\r\n            this.color = color;\r\n            this.transform = new Transform(transform);\r\n        }\r\n\r\n        add(child) {\r\n            this.childs.push(child);\r\n            child.transform.parent = this.transform;\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Shader utility\r\n     */\r\n    export class Shader {\r\n\r\n        gl: WebGLRenderingContext;\r\n        program: WebGLProgram;\r\n        indices: WebGLBuffer;\r\n        attribs: object = {};\r\n        location: object = {};\r\n\r\n        constructor(gl: WebGLRenderingContext, vertexShader: string, fragmentShader: string) {\r\n            this.gl = gl;\r\n            this.program = gl.createProgram();\r\n            this.indices = gl.createBuffer();\r\n            const program = this.program;\r\n            gl.attachShader(program, this.create(gl.VERTEX_SHADER, vertexShader));\r\n            gl.attachShader(program, this.create(gl.FRAGMENT_SHADER, fragmentShader));\r\n            gl.linkProgram(program);\r\n            if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n                console.log(gl.getProgramInfoLog(program));\r\n                gl.deleteProgram(program);\r\n            }\r\n        }\r\n\r\n        private create(type: number, source: string): WebGLShader {\r\n            const gl = this.gl;\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n            if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n                console.log(gl.getShaderInfoLog(shader));\r\n            }\r\n            return shader;\r\n        }\r\n\r\n        attrib(name: string, values: Array<number>, size: number): Shader {\r\n            const gl = this.gl;\r\n            if (!this.location[name]) {\r\n                this.location[name] = gl.getAttribLocation(this.program, name);\r\n                this.attribs[name] = gl.createBuffer();\r\n            }\r\n            const location = this.location[name];\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.attribs[name]);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(values), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(location);\r\n            gl.vertexAttribPointer(location, size, gl.FLOAT, false, 0, 0);\r\n            return this;\r\n        }\r\n\r\n        uniform(name: string, value: number): Shader;\r\n        uniform(name: string, value: Array<number>): Shader;\r\n        uniform(name: string, value: any): Shader {\r\n            const gl = this.gl;\r\n            if (!this.location[name]) {\r\n                this.location[name] = gl.getUniformLocation(this.program, name);\r\n            }\r\n            const location = this.location[name];\r\n            if (typeof value == 'number') {\r\n                gl.uniform1f(location, value);\r\n                return this;\r\n            }\r\n            switch (value.length) {\r\n                case 2: gl.uniform2fv(location, value); break;\r\n                case 3: gl.uniform3fv(location, value); break;\r\n                case 4: gl.uniform4fv(location, value); break;\r\n                case 9: gl.uniformMatrix3fv(location, false, value); break;\r\n                case 16: gl.uniformMatrix4fv(location, false, value); break;\r\n            }\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n}"]}